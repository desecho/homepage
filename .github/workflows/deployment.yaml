name: Deployment
on:
  push:
    branches:
      - master
jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Install s3cmd
        run: |
          pip install s3cmd==2.1.0
          cp .github/workflows/.s3cfg ~/.s3cfg
          sed "s/\[access_key\]/${{ secrets.SPACES_ACCESS_KEY }}/g" ~/.s3cfg -i
          SPACES_SECRET_KEY=$(echo ${{ secrets.SPACES_SECRET_KEY }} | sed 's;/;\\/;g')
          sed "s/\[secret_key\]/$SPACES_SECRET_KEY/g" ~/.s3cfg -i

      - name: Upload static files
        run: s3cmd put cdn/* s3://cdn.samarchyan.me/ -r -P --no-mime-magic --guess-mime-type

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Flush CDN cache
        run: |
          CDN_ID=$(doctl compute cdn list | grep cdn.samarchyan.me | awk '{print $1}')
          doctl compute cdn flush $CDN_ID

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0

      - name: Configure kubectl
        run: |
          mkdir ~/.kube
          echo $KUBECONFIG > ~/.kube/config
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}  # Done as a variable because doesn't work in place.

      - name: Deploy
        run: |
          kubectl apply -f deployment/deployment.yaml
          kubectl apply -f deployment/ingress.yaml
          kubectl apply -f deployment/service.yaml
          kubectl rollout restart deployment/homepage
          kubectl rollout status deployment/homepage
